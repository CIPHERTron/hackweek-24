pipeline:
  projectIdentifier: Shashank_Project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github
        build: <+input>
  stages:
    - stage:
        name: buildcode
        identifier: buildcode
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          execution:
            steps:
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry_1
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: account.harnessImage
                    repo: test
                    tags: <+input>
    - stage:
        name: deploy_dev
        identifier: deploy_dev
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: dummy_service
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  manifests:
                    - manifest:
                        identifier: test
                        type: K8sManifest
                        spec:
                          store:
                            type: Github
                            spec:
                              connectorRef: <+input>
                              paths: <+input>
                              repoName: <+input>
          environment:
            environmentRef: QA
            deployToAll: false
            provisioner:
              steps:
                - step:
                    type: TerraformPlan
                    name: TT
                    identifier: TT
                    timeout: 10m
                    spec:
                      provisionerIdentifier: tt123
                      configuration:
                        command: Apply
                        configFiles:
                          store:
                            spec:
                              connectorRef: account.Github
                              gitFetchType: Branch
                              branch: main
                              folderPath: test
                            type: Github
                        secretManagerRef: harnessSecretManager
                        skipRefreshCommand: false
                - step:
                    type: HarnessApproval
                    name: approval
                    identifier: approval
                    timeout: 1d
                    spec:
                      approvalMessage: approval
                      includePipelineExecutionHistory: true
                      approvers:
                        userGroups:
                          - account._account_all_users
                        minimumCount: 1
                        disallowPipelineExecutor: true
                      approverInputs: []
                      isAutoRejectEnabled: false
                - step:
                    type: TerraformApply
                    name: TTTT
                    identifier: TTTT
                    timeout: 10m
                    spec:
                      provisionerIdentifier: tt123
                      configuration:
                        type: InheritFromPlan
              rollbackSteps:
                - step:
                    type: TerraformRollback
                    name: TTTTTTT
                    identifier: TTTTTTT
                    timeout: 10m
                    spec:
                      provisionerIdentifier: tt123
                      skipRefreshCommand: false
            infrastructureDefinitions:
              - identifier: qainfra
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: ManualIntervention
    - stage:
        name: prod-deploy
        identifier: proddeploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: dummy_service
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  manifests:
                    - manifest:
                        identifier: test
                        type: K8sManifest
                        spec:
                          store:
                            type: Github
                            spec:
                              connectorRef: <+input>
                              paths: <+input>
                              repoName: <+input>
          environment:
            environmentRef: prod
            deployToAll: false
            infrastructureDefinitions:
              - identifier: prodinfra
          execution:
            steps:
              - step:
                  type: JiraCreate
                  name: JiraCreate
                  identifier: JiraCreate
                  spec:
                    connectorRef: <+input>
                    projectKey: <+input>
                    issueType: <+input>
                    fields: []
                  timeout: 10m
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
              - step:
                  type: JiraUpdate
                  name: JiraUpdate_1
                  identifier: JiraUpdate_1
                  spec:
                    connectorRef: <+input>
                    issueKey: <+input>
                    fields: []
                  timeout: 10m
            rollbackSteps:
              - stepGroup:
                  name: rollback
                  identifier: rollback
                  template:
                    templateRef: rollback_standard_template
                    versionLabel: v1
                    gitBranch: main
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
  identifier: Pipeline_without_testsecuritynotificationapproval
  name: Pipeline without test-security-notification-approval